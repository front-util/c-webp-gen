Module.onRuntimeInitialized=async()=>{const n={version:Module.cwrap("version","number",[]),createBuffer:Module.cwrap("create_buffer","number",["number","number"]),destroyBuffer:Module.cwrap("destroy_buffer",null,["number"]),encode:Module.cwrap("encode",null,["number","number","number","number"]),freeResult:Module.cwrap("free_result",null,["number"]),getResultPointer:Module.cwrap("get_result_pointer",null,[]),getResultSize:Module.cwrap("get_result_size",null,[])},s=async(o)=>{const r=await fetch(o,{mode:"no-cors"}).then((i)=>i.blob()),e=await createImageBitmap(r),t=document.createElement("canvas");t.width=e.width,t.height=e.height;const a=t.getContext("2d");return a?.drawImage(e,0,0),a?.getImageData(0,0,e.width,e.height)},l=(o,r)=>{n.encode(o,r.width,r.height,100);const e=n.getResultPointer(),t=n.getResultSize(),a=new Uint8Array(Module.HEAP8.buffer,e,t),i=new Uint8Array(a);return n.freeResult(e),i},d=(o)=>{const r=new Blob([o],{type:"image/webp"}),e=URL.createObjectURL(r),t=document.createElement("img");t.src=e,document.body.appendChild(t)};console.log(n.version());const u=await s("test.png");if(!u)return;const c=n.createBuffer(u.width,u.height);Module.HEAP8.set(u.data,c);const m=l(c,u);d(m),n.destroyBuffer(c)};
